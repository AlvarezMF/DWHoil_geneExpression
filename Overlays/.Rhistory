#2016 MDP stress annotation overlap
#Written by Mariano Alvarez
#Oct 17, 2016
setwd('/volumes/External1/R/2015BPoil/Deepwater-Horizon-Oil-Spill-analyses/Overlays/Pass5')
library(limma)
library(VennDiagram)
library(ggplot2)
library(reshape2)
### REDO OF MDP OVERLAP
library(dplyr)
library(stringr)
# First, use only the genes that appear on both the ATH1 array and the Spartina array
ath1 <- read.delim("affy_ATH1_array_elements-2010-12-20.txt", sep='\t', header=TRUE)
SpAlt1 <- read.csv("Spart_array_annotation.csv", header=TRUE)
colnames(SpAlt1)[8]<-"locus"
SpAlt1$locus<-gsub("\\..*","",SpAlt1$locus)
ConsensusGenes<-merge(ath1,SpAlt1,by="locus", all = FALSE)
ConsensusGenes<-as.data.frame(ConsensusGenes$locus)
#remove duplicates
ConsensusGenes<-as.data.frame(ConsensusGenes[!duplicated(ConsensusGenes[,1]),])
colnames(ConsensusGenes)<-"locus"
# Then, subset genes from the MDP stress annotation that appear in the list of consensus genes
#MDP<-read.csv("MDPStress_GO.csv", header=TRUE)
MDP<-read.delim("MDPStress_GO.txt", header=TRUE, sep="\t")
MDP<-MDP[,c(1,3)]
MDP$GOStress<-as.character(MDP$GOStress)
#split<-strsplit(MDP$GOStress, " /// ", fixed = TRUE)
#split<-data.frame(matrix(unlist(split), nrow=22746, byrow=T),stringsAsFactors=FALSE)
#split<-tidyr::separate(MDP, GOStress, c(as.character(1:11)), sep = " /// ", remove = TRUE, fill = "right")
#colnames(split)[3:13]<-c("")
MDP$GOStress<-gsub("///", "",MDP$GOStress, fixed = TRUE)
stresses<-as.character(c("Herbivore","COLD","HEAT","OSMOTIC",
"OXIDATIVE","UVB","VIRUS","FungalPathogen",
"WOUND","SALT","GENOTOXIC","BacterialPathogen","HL","DROUGHT"))
for (x in (stresses)) {
Stress<-filter(MDP, grepl(paste(x),GOStress))
#Stress<-MDP %> filter(str_detect(GOStress, paste(x)))
#Stress<- MDP %>% filter(grepl(paste(x), GOStress))
#Stress<- MDP %>% filter(grepl("DROUGHT", GOStress))
#Stress <- MDP[grepl(paste(x),]
Stress$New<-1
Stress<-Stress[,c(1,ncol(Stress))]
colnames(Stress)[2]<-paste(x)
MDP<-merge(MDP,Stress,by="Transcript_ID_Array_Design_", all.x=TRUE)
}
#MDP<-MDP[,-c(2)]
MDP[is.na(MDP)] <- 0
MDP$sum<-rowSums(MDP[,c(3:ncol(MDP))])
MDP<-filter(MDP, sum != 0)
MDP<-MDP[,-c(2)]
colnames(MDP)[1]<-"ATnumber"
MDP.init<-nrow(MDP)
MDP$ATnumber<-toupper(MDP$ATnumber)
colnames(MDP)[1]<-"locus"
MDP<-merge(ConsensusGenes,MDP,by="locus")
paste("Rows removed:",MDP.init-nrow(MDP))
paste("Rows left:", nrow(MDP))
# Load in oil-responsive Spartina genes
Sa.dataDUP <- read.csv("all_oil_responsive2.csv")
colnames(Sa.dataDUP)[1]<-"locus"
#remove duplicate observations in S. alterniflora
Sa.data<-Sa.dataDUP[!duplicated(Sa.dataDUP[,1]),]
Sa.origL <- nrow(Sa.data)
print(c(Sa.origL, "original observations in Spartina"))
print(c(nrow(Sa.dataDUP)-Sa.origL, "duplicate observations removed in Spartina"))
# Prep Spartina data for overlap comparison
Sa.data$SpartinaOil<-1
Sa.data<-Sa.data[,-c(2)]
#Make sure to only compare consensus genes that appear in new overlap
Sa.origL <- nrow(Sa.data)
Sa.data<-merge(ConsensusGenes,Sa.data,by="locus")
paste("Rows removed:",Sa.origL-nrow(Sa.data))
#paste("Rows left:", nrow(Sa.data)
# Merge Spartina and MDP
StressOverlap<-merge(MDP,Sa.data,by="locus", all.x=TRUE)
# Why do I have extra genes? I guess I'll remove them?
#StressOverlap<-filter(StressOverlap, !is.na(BacterialPathogen))
# Recode Spartina NA as 0
StressOverlap[is.na(StressOverlap)] <- 0
# Look for super responders (genes with 1s for more than half of stresses, excluding SpartinaOil)
hist(StressOverlap$sum)
#StressOverlap$BaseResponseSum<-rowSums(StressOverlap[,3:11])
SuperResponders<-filter(StressOverlap, sum>4)
SpartinaResponders<-filter(SuperResponders, SpartinaOil==1)
# make SpartinaResponders table
SRtable<-merge(SpartinaResponders,ath1,by="locus", all=FALSE)
write.csv(SRtable, "SRtable.csv")
# overlap with Xenome
Xenome <- read.table("xenomic_AT_loci_and_related_spartina_probes.txt", sep = "\t", colClasses = "character")
#Xenome<-data.frame(toupper(Xenome[,1]))
colnames(Xenome)<-c(Xenome[1,1],Xenome[1,2],Xenome[1,3])
Xenome<-Xenome[-c(1),]
Xenome<-data.frame(Xenome[,2])
Xenome$AtXenome<-1
colnames(Xenome)[1]<-"locus"
XenomeOverlap<-merge(StressOverlap,Xenome, by="locus", all.x = TRUE)
#XenomeOverlap<-XenomeOverlap[,c(1:2,16,3:15)]
XenomeOverlap[is.na(XenomeOverlap)] <- 0
write.csv(XenomeOverlap,"MDPOverlaptable.csv")
nrow(filter(XenomeOverlap, AtXenome == 1 & SpartinaOil == 1 & sum > 4))
View(MDP)
setwd('/volumes/External1/R/2015BPoil/Deepwater-Horizon-Oil-Spill-analyses/Overlays/Pass5')
library(limma)
library(VennDiagram)
library(ggplot2)
library(reshape2)
### REDO OF MDP OVERLAP
library(dplyr)
library(stringr)
# First, use only the genes that appear on both the ATH1 array and the Spartina array
ath1 <- read.delim("affy_ATH1_array_elements-2010-12-20.txt", sep='\t', header=TRUE)
SpAlt1 <- read.csv("Spart_array_annotation.csv", header=TRUE)
colnames(SpAlt1)[8]<-"locus"
SpAlt1$locus<-gsub("\\..*","",SpAlt1$locus)
ConsensusGenes<-merge(ath1,SpAlt1,by="locus", all = FALSE)
ConsensusGenes<-as.data.frame(ConsensusGenes$locus)
#remove duplicates
ConsensusGenes<-as.data.frame(ConsensusGenes[!duplicated(ConsensusGenes[,1]),])
colnames(ConsensusGenes)<-"locus"
# Then, subset genes from the MDP stress annotation that appear in the list of consensus genes
#MDP<-read.csv("MDPStress_GO.csv", header=TRUE)
MDP<-read.delim("MDPStress_GO.txt", header=TRUE, sep="\t")
MDP<-MDP[,c(1,3)]
MDP$GOStress<-as.character(MDP$GOStress)
#split<-strsplit(MDP$GOStress, " /// ", fixed = TRUE)
#split<-data.frame(matrix(unlist(split), nrow=22746, byrow=T),stringsAsFactors=FALSE)
#split<-tidyr::separate(MDP, GOStress, c(as.character(1:11)), sep = " /// ", remove = TRUE, fill = "right")
#colnames(split)[3:13]<-c("")
MDP$GOStress<-gsub("///", "",MDP$GOStress, fixed = TRUE)
stresses<-as.character(c("Herbivore","COLD","HEAT","OSMOTIC",
"OXIDATIVE","UVB","VIRUS","FungalPathogen",
"WOUND","SALT","GENOTOXIC","BacterialPathogen","HL","DROUGHT"))
for (x in (stresses)) {
Stress<-filter(MDP, grepl(paste(x),GOStress))
#Stress<-MDP %> filter(str_detect(GOStress, paste(x)))
#Stress<- MDP %>% filter(grepl(paste(x), GOStress))
#Stress<- MDP %>% filter(grepl("DROUGHT", GOStress))
#Stress <- MDP[grepl(paste(x),]
Stress$New<-1
Stress<-Stress[,c(1,ncol(Stress))]
colnames(Stress)[2]<-paste(x)
MDP<-merge(MDP,Stress,by="Transcript_ID_Array_Design_", all.x=TRUE)
}
#MDP<-MDP[,-c(2)]
MDP[is.na(MDP)] <- 0
MDP$sum<-rowSums(MDP[,c(3:ncol(MDP))])
MDP<-filter(MDP, sum != 0)
View(MDP)
