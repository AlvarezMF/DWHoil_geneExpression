ME.fit2=lmer(formula(paste(x, formula2)), data=Eigens)
ME.fit2=lm(formula(paste(x, formula2)), data=Eigens)
C<-anova(ME.fit,ME.fit2)
C
getGLMs <- function(x) {
system(paste("rm ","EigenFit_", x, ".txt",sep=""))
formula = "~ Treatment + (1|Treatment:Population)"
#ME.fit=lmer(Eigens[,c("x")] ~ Treatment*State + Treatment:(1|Population), data=Eigens)
#ME.fit=lmer(formula(paste(x, formula)), data=Eigens)
formula2 = "~ Treatment"
ME.fit=lmer(formula(paste(x, formula)), data=Eigens)
ME.fit2=lm(formula(paste(x, formula2)), data=Eigens)
A=summary(ME.fit)
cat("\n\n", file = paste("EigenFit_", x, ".txt", sep=""), append = TRUE)
# export anova test output
cat(c(paste(x),"Summary\n"), file = paste("EigenFit_", x, ".txt", sep=""), append = TRUE)
capture.output(A, file = paste("EigenFit_", x, ".txt", sep=""), append = TRUE)
B=Anova(ME.fit)
cat("\n\n", file = paste("EigenFit_", x, ".txt", sep=""), append = TRUE)
cat(c(paste(x),"ANOVA\n"), file = paste("EigenFit_", x, ".txt", sep=""), append = TRUE)
capture.output(B, file = paste("EigenFit_", x, ".txt", sep=""), append = TRUE)
cat("\n\n", file = "PsTreat.txt", append = TRUE)
cat(paste(x, A$coefficients[2,4], sep="\t"), file = "PsTreat.txt", append = TRUE)
cat("\n\n", file = "PsPop.txt", append = TRUE)
cat(paste(x, A$coefficients[3,4], sep="\t"), file = "PsPop.txt", append = TRUE)
#C<-anova(ME.fit,ME.fit2)
}
lapply(list, getGLMs)
ME.fit=lmer(formula(paste(x, formula)), data=Eigens)
ME.fit2=lm(formula(paste(x, formula2)), data=Eigens)
A=summary(ME.fit)
B=Anova(ME.fit)
A$coefficients[2,4]
A$coefficients[3,4]
A
getGLMs <- function(x) {
system(paste("rm ","EigenFit_", x, ".txt",sep=""))
formula = "~ Treatment + (1|Treatment:Population)"
#ME.fit=lmer(Eigens[,c("x")] ~ Treatment*State + Treatment:(1|Population), data=Eigens)
#ME.fit=lmer(formula(paste(x, formula)), data=Eigens)
formula2 = "~ Treatment"
ME.fit=lmer(formula(paste(x, formula)), data=Eigens)
ME.fit2=lm(formula(paste(x, formula2)), data=Eigens)
A=summary(ME.fit)
cat("\n\n", file = paste("EigenFit_", x, ".txt", sep=""), append = TRUE)
# export anova test output
cat(c(paste(x),"Summary\n"), file = paste("EigenFit_", x, ".txt", sep=""), append = TRUE)
capture.output(A, file = paste("EigenFit_", x, ".txt", sep=""), append = TRUE)
B=Anova(ME.fit)
cat("\n\n", file = paste("EigenFit_", x, ".txt", sep=""), append = TRUE)
cat(c(paste(x),"ANOVA\n"), file = paste("EigenFit_", x, ".txt", sep=""), append = TRUE)
capture.output(B, file = paste("EigenFit_", x, ".txt", sep=""), append = TRUE)
cat("\n\n", file = "PsTreat.txt", append = TRUE)
cat(paste(x, A$coefficients[2,4], sep="\t"), file = "PsTreat.txt", append = TRUE)
#cat("\n\n", file = "PsPop.txt", append = TRUE)
#cat(paste(x, A$coefficients[3,4], sep="\t"), file = "PsPop.txt", append = TRUE)
#C<-anova(ME.fit,ME.fit2)
}
getGLMs <- function(x) {
system(paste("rm ","EigenFit_", x, ".txt",sep=""))
formula = "~ Treatment + (1|Treatment:Population)"
#ME.fit=lmer(Eigens[,c("x")] ~ Treatment*State + Treatment:(1|Population), data=Eigens)
#ME.fit=lmer(formula(paste(x, formula)), data=Eigens)
formula2 = "~ Treatment"
ME.fit=lmer(formula(paste(x, formula)), data=Eigens)
ME.fit2=lm(formula(paste(x, formula2)), data=Eigens)
A=summary(ME.fit)
cat("\n\n", file = paste("EigenFit_", x, ".txt", sep=""), append = TRUE)
# export anova test output
cat(c(paste(x),"Summary\n"), file = paste("EigenFit_", x, ".txt", sep=""), append = TRUE)
capture.output(A, file = paste("EigenFit_", x, ".txt", sep=""), append = TRUE)
B=Anova(ME.fit)
cat("\n\n", file = paste("EigenFit_", x, ".txt", sep=""), append = TRUE)
cat(c(paste(x),"ANOVA\n"), file = paste("EigenFit_", x, ".txt", sep=""), append = TRUE)
capture.output(B, file = paste("EigenFit_", x, ".txt", sep=""), append = TRUE)
cat("\n\n", file = "PsTreat.txt", append = TRUE)
cat(paste(x, A$coefficients[2,4], sep="\t"), file = "PsTreat.txt", append = TRUE)
#cat("\n\n", file = "PsPop.txt", append = TRUE)
#cat(paste(x, A$coefficients[3,4], sep="\t"), file = "PsPop.txt", append = TRUE)
#C<-anova(ME.fit,ME.fit2)
}
lapply(list, getGLMs)
ForFDR.treat<-read.delim("PsTreat.txt", sep = "\t", header=FALSE)
ForFDR.treat<-read.delim("PsTreat.txt", sep = "\t", header=FALSE)
ForFDR.treat$FDR<-p.adjust(ForFDR.treat$V2, method = "holm")
filter(ForFDR.treat, V2 <=0.05)
A
B
A
$coefficients[2,4]
A$coefficients[2,4]
A$logLik
A$coefficients
getGLMs <- function(x) {
system(paste("rm ","EigenFit_", x, ".txt",sep=""))
formula = "~ Treatment + (1|Treatment:Population)"
#ME.fit=lmer(Eigens[,c("x")] ~ Treatment*State + Treatment:(1|Population), data=Eigens)
#ME.fit=lmer(formula(paste(x, formula)), data=Eigens)
formula2 = "~ Treatment"
ME.fit=lmer(formula(paste(x, formula)), data=Eigens)
ME.fit2=lm(formula(paste(x, formula2)), data=Eigens)
A=summary(ME.fit)
cat("\n\n", file = paste("EigenFit_", x, ".txt", sep=""), append = TRUE)
# export anova test output
cat(c(paste(x),"Summary\n"), file = paste("EigenFit_", x, ".txt", sep=""), append = TRUE)
capture.output(A, file = paste("EigenFit_", x, ".txt", sep=""), append = TRUE)
B=Anova(ME.fit)
cat("\n\n", file = paste("EigenFit_", x, ".txt", sep=""), append = TRUE)
cat(c(paste(x),"ANOVA\n"), file = paste("EigenFit_", x, ".txt", sep=""), append = TRUE)
capture.output(B, file = paste("EigenFit_", x, ".txt", sep=""), append = TRUE)
cat("\n\n", file = "PsTreat.txt", append = TRUE)
cat(paste(x, A$coefficients[2,5], sep="\t"), file = "PsTreat.txt", append = TRUE)
#cat("\n\n", file = "PsPop.txt", append = TRUE)
#cat(paste(x, A$coefficients[3,4], sep="\t"), file = "PsPop.txt", append = TRUE)
#C<-anova(ME.fit,ME.fit2)
}
lapply(list, getGLMs)
ForFDR.treat<-read.delim("PsTreat.txt", sep = "\t", header=FALSE)
ForFDR.treat$FDR<-p.adjust(ForFDR.treat$V2, method = "holm")
filter(ForFDR.treat, V2 <=0.05)
filter(ForFDR.treat, V3 <=0.05)
filter(ForFDR.treat, FDR <=0.05)
ForFDR.treat<-read.delim("PsTreat.txt", sep = "\t", header=FALSE)
View(ForFDR.treat)
ForFDR.treat$FDR<-p.adjust(ForFDR.treat$V2, method = "holm")
help("p.adjust")
ForFDR.treat<-read.delim("PsTreat.txt", sep = "\t", header=FALSE)
ForFDR.treat$FDR<-p.adjust(ForFDR.treat$V2, method = "hoch")
filter(ForFDR.treat, FDR <=0.05)
View(ForFDR.treat)
ForFDR.treat<-read.delim("PsTreat.txt", sep = "\t", header=FALSE)
ForFDR.treat$FDR<-p.adjust(ForFDR.treat$V2, method = "fdr")
View(ForFDR.treat)
library(sva)
mod = model.matrix(~Treatment + (1|Treatment:Population), data=datTraits)
View(allTraits)
View(traitData)
View(allTraits)
datTraits
class(datTraits$Treatment)
mod = model.matrix(~as.factor(Treatment) + (1|as.factor(Treatment):as.factor(Population)), data=datTraits)
View(mod)
View(datTraits)
mod = model.matrix(~as.factor(Treatment) + as.factor(Treatment)/as.factor(Population)), data=datTraits)
mod = model.matrix(~as.factor(Treatment) + as.factor(Treatment)/as.factor(Population), data=datTraits)
View(mod)
mod0 = model.matrix(~1,data=datTraits)
View(datExpr)
dat.mat<-datExpr
n.sv = num.sv(data.mat,mod,method="bm")
n.sv = num.sv(data.mat,mod,method="be")
n.sv = num.sv(dat.mat,mod,method="be")
dat.mat<-data.matrix(t(datExpr))
n.sv = num.sv(dat.mat,mod,method="be")
mod = model.matrix(~as.factor(Treatment) + as.factor(Population), data=datTraits)
mod0 = model.matrix(~1,data=datTraits)
n.sv = num.sv(dat.mat,mod,method="be")
mod = model.matrix(~as.factor(Treatment)+as/factor(State), data=datTraits)
mod = model.matrix(~as.factor(Treatment)+as.factor(State), data=datTraits)
mod0 = model.matrix(~1,data=datTraits)
dat.mat<-data.matrix(t(datExpr))
n.sv = num.sv(dat.mat,mod,method="be")
dat.mat
dat.mat<-impute.knn(datExpr)
dat.mat<-impute::impute.knn(datExpr)
dat.mat<-impute::impute.knn(dat.mat)
dat.mat<-dat.mat$data
n.sv = num.sv(dat.mat,mod,method="be")
help(num.sv)
n.sv = num.sv(dat.mat,mod,method="be",vfilter=10000)
n.sv
svobj = sva(data.mat,mod,mod0,n.sv=n.sv)
svobj = sva(dat.mat,mod,mod0,n.sv=n.sv)
svobj$sv
dat.mat<-data.matrix((datExpr))
dat.mat<-impute::impute.knn(dat.mat)
dat.mat<-dat.mat$data
n.sv = num.sv(dat.mat,mod,method="be",vfilter=10000)
View(dat.mat)
svobj = sva(dat.mat,mod,mod0,n.sv=n.sv)
dat.mat<-data.matrix(t(datExpr))
dat.mat<-impute::impute.knn(dat.mat)
dat.mat<-dat.mat$data
n.sv = num.sv(dat.mat,mod,method="be",vfilter=10000)
help(num.sv)
n.sv = num.sv(dat.mat,mod,method="leek",vfilter=10000)
n.sv
svobj = sva(dat.mat,mod,mod0,n.sv=n.sv)
svobj$sv
help("goodSamplesGenes")
Eigens<-readRDS("eigens.rds")
library(lme4)
library(nlme)
library(car)
library(MASS)
library(lmerTest)
library(dplyr)
getGLMs <- function(x) {
system(paste("rm ","EigenFit_", x, ".txt",sep=""))
formula = "~ Treatment + state + (1|Treatment:Population)"
#ME.fit=lmer(Eigens[,c("x")] ~ Treatment*State + Treatment:(1|Population), data=Eigens)
#ME.fit=lmer(formula(paste(x, formula)), data=Eigens)
formula2 = "~ Treatment"
ME.fit=lmer(formula(paste(x, formula)), data=Eigens)
ME.fit2=lm(formula(paste(x, formula2)), data=Eigens)
A=summary(ME.fit)
cat("\n\n", file = paste("EigenFit_", x, ".txt", sep=""), append = TRUE)
# export anova test output
cat(c(paste(x),"Summary\n"), file = paste("EigenFit_", x, ".txt", sep=""), append = TRUE)
capture.output(A, file = paste("EigenFit_", x, ".txt", sep=""), append = TRUE)
B=car::Anova(ME.fit)
cat("\n\n", file = paste("EigenFit_", x, ".txt", sep=""), append = TRUE)
cat(c(paste(x),"ANOVA\n"), file = paste("EigenFit_", x, ".txt", sep=""), append = TRUE)
capture.output(B, file = paste("EigenFit_", x, ".txt", sep=""), append = TRUE)
cat("\n\n", file = "PsTreat.txt", append = TRUE)
cat(paste(x, A$coefficients[2,5], sep="\t"), file = "PsTreat.txt", append = TRUE)
#cat("\n\n", file = "PsPop.txt", append = TRUE)
#cat(paste(x, A$coefficients[3,4], sep="\t"), file = "PsPop.txt", append = TRUE)
#C<-anova(ME.fit,ME.fit2)
}
lapply(list, getGLMs)
View(Eigens)
View(allTraits)
View(datTraits)
Eigens<-readRDS("MEs.rds")
Names<-colnames(Eigens)
Eigens$SamplePool<-datTraits$SamplePool
Eigens<-merge(Eigens, datTraits, by="SamplePool")
View(Eigens)
View(datTraits)
Eigens$SamplePool<-rownames(datTraits)
datTraits$SamplePool<-rownames(datTraits)
View(Eigens)
View(allTraits)
Eigens<-merge(Eigens, datTraits, by="SamplePool")
View(Eigens)
list<-colnames(Eigens[,2:29])
x<-list[1]
formula = "~ Treatment + State + (1|Treatment:Population)"
ME.fit=lmer(formula(paste(x, formula)), data=Eigens)
A=summary(ME.fit)
A
B
list<-colnames(Eigens[,2:29])
getGLMs <- function(x) {
system(paste("rm ","EigenFit_", x, ".txt",sep=""))
formula = "~ Treatment + State + (1|Treatment:Population)"
#ME.fit=lmer(Eigens[,c("x")] ~ Treatment*State + Treatment:(1|Population), data=Eigens)
#ME.fit=lmer(formula(paste(x, formula)), data=Eigens)
#formula2 = "~ Treatment"
ME.fit=lmer(formula(paste(x, formula)), data=Eigens)
#ME.fit2=lm(formula(paste(x, formula2)), data=Eigens)
A=summary(ME.fit)
cat("\n\n", file = paste("EigenFit_", x, ".txt", sep=""), append = TRUE)
# export anova test output
cat(c(paste(x),"Summary\n"), file = paste("EigenFit_", x, ".txt", sep=""), append = TRUE)
capture.output(A, file = paste("EigenFit_", x, ".txt", sep=""), append = TRUE)
B=car::Anova(ME.fit)
cat("\n\n", file = paste("EigenFit_", x, ".txt", sep=""), append = TRUE)
cat(c(paste(x),"ANOVA\n"), file = paste("EigenFit_", x, ".txt", sep=""), append = TRUE)
capture.output(B, file = paste("EigenFit_", x, ".txt", sep=""), append = TRUE)
cat("\n\n", file = "PsTreat.txt", append = TRUE)
cat(paste(x, A$coefficients[2,5], sep="\t"), file = "PsTreat.txt", append = TRUE)
#cat("\n\n", file = "PsPop.txt", append = TRUE)
#cat(paste(x, A$coefficients[3,4], sep="\t"), file = "PsPop.txt", append = TRUE)
#C<-anova(ME.fit,ME.fit2)
}
lapply(list, getGLMs)
ForFDR.treat<-read.delim("PsTreat.txt", sep = "\t", header=FALSE)
ForFDR.treat$FDR<-p.adjust(ForFDR.treat$V2, method = "holm")
filter(ForFDR.treat, FDR <=0.05)
View(ForFDR.treat)
list<-colnames(Eigens[,2:40])
getGLMs <- function(x) {
system(paste("rm ","EigenFit_", x, ".txt",sep=""))
formula = "~ Treatment + State + (1|Treatment:Population)"
#ME.fit=lmer(Eigens[,c("x")] ~ Treatment*State + Treatment:(1|Population), data=Eigens)
#ME.fit=lmer(formula(paste(x, formula)), data=Eigens)
#formula2 = "~ Treatment"
ME.fit=lmer(formula(paste(x, formula)), data=Eigens)
#ME.fit2=lm(formula(paste(x, formula2)), data=Eigens)
A=summary(ME.fit)
cat("\n\n", file = paste("EigenFit_", x, ".txt", sep=""), append = TRUE)
# export anova test output
cat(c(paste(x),"Summary\n"), file = paste("EigenFit_", x, ".txt", sep=""), append = TRUE)
capture.output(A, file = paste("EigenFit_", x, ".txt", sep=""), append = TRUE)
B=car::Anova(ME.fit)
cat("\n\n", file = paste("EigenFit_", x, ".txt", sep=""), append = TRUE)
cat(c(paste(x),"ANOVA\n"), file = paste("EigenFit_", x, ".txt", sep=""), append = TRUE)
capture.output(B, file = paste("EigenFit_", x, ".txt", sep=""), append = TRUE)
cat("\n\n", file = "PsTreat.txt", append = TRUE)
cat(paste(x, A$coefficients[2,5], sep="\t"), file = "PsTreat.txt", append = TRUE)
#cat("\n\n", file = "PsPop.txt", append = TRUE)
#cat(paste(x, A$coefficients[3,4], sep="\t"), file = "PsPop.txt", append = TRUE)
#C<-anova(ME.fit,ME.fit2)
}
# start cluster
parallelCluster <- parallel::makeCluster(detectCores()-1, type = "FORK")
print(parallelCluster)
parLapply(parallelCluster, list, getGLMs)
# Shutdown cluster neatly
if(!is.null(parallelCluster)) {
parallel::stopCluster(parallelCluster)
parallelCluster <- c()
}
gc()
ForFDR.treat<-read.delim("PsTreat.txt", sep = "\t", header=FALSE)
ForFDR.treat$FDR<-p.adjust(ForFDR.treat$V2, method = "holm")
ForFDR.treat<-read.delim("PsTreat.txt", sep = "\t", header=FALSE)
View(ForFDR.treat)
system("rm PsTreat.txt")
A=data.frame(summary(ME.fit)$coefficients[2,5])
A
x
A=data.frame(x,summary(ME.fit)$coefficients[2,5])
A
library(data.table)
system("rm PsTreat.txt")
getGLMs <- function(x) {
#system(paste("rm ","EigenFit_", x, ".txt",sep=""))
formula = "~ Treatment + State + (1|Treatment:Population)"
#ME.fit=lmer(Eigens[,c("x")] ~ Treatment*State + Treatment:(1|Population), data=Eigens)
#ME.fit=lmer(formula(paste(x, formula)), data=Eigens)
#formula2 = "~ Treatment"
ME.fit=lmer(formula(paste(x, formula)), data=Eigens)
#ME.fit2=lm(formula(paste(x, formula2)), data=Eigens)
A=data.frame(x,summary(ME.fit)$coefficients[2,5])
#cat("\n\n", file = paste("EigenFit_", x, ".txt", sep=""), append = TRUE)
# export anova test output
#cat(c(paste(x),"Summary\n"), file = paste("EigenFit_", x, ".txt", sep=""), append = TRUE)
#capture.output(A, file = paste("EigenFit_", x, ".txt", sep=""), append = TRUE)
#B=car::Anova(ME.fit)
#cat("\n\n", file = paste("EigenFit_", x, ".txt", sep=""), append = TRUE)
#cat(c(paste(x),"ANOVA\n"), file = paste("EigenFit_", x, ".txt", sep=""), append = TRUE)
#capture.output(B, file = paste("EigenFit_", x, ".txt", sep=""), append = TRUE)
cat("\n\n", file = "PsTreat.txt", append = TRUE)
fwrite(A, file = "PsTreat.txt", append = TRUE,col.names=FALSE,row.names = FALSE,quote = FALSE)
#cat("\n\n", file = "PsPop.txt", append = TRUE)
#cat(paste(x, A$coefficients[3,4], sep="\t"), file = "PsPop.txt", append = TRUE)
#C<-anova(ME.fit,ME.fit2)
}
# start cluster
parallelCluster <- parallel::makeCluster(detectCores()-1, type = "FORK")
print(parallelCluster)
parLapply(parallelCluster, list, getGLMs)
# Shutdown cluster neatly
if(!is.null(parallelCluster)) {
parallel::stopCluster(parallelCluster)
parallelCluster <- c()
}
gc()
ForFDR.treat<-read.delim("PsTreat.txt", sep = "\t", header=FALSE)
View(ForFDR.treat)
system("rm PsTreat.txt")
getGLMs <- function(x) {
#system(paste("rm ","EigenFit_", x, ".txt",sep=""))
formula = "~ Treatment + State + (1|Treatment:Population)"
#ME.fit=lmer(Eigens[,c("x")] ~ Treatment*State + Treatment:(1|Population), data=Eigens)
#ME.fit=lmer(formula(paste(x, formula)), data=Eigens)
#formula2 = "~ Treatment"
ME.fit=lmer(formula(paste(x, formula)), data=Eigens)
#ME.fit2=lm(formula(paste(x, formula2)), data=Eigens)
A=data.frame(x,summary(ME.fit)$coefficients[2,5])
#cat("\n\n", file = paste("EigenFit_", x, ".txt", sep=""), append = TRUE)
# export anova test output
#cat(c(paste(x),"Summary\n"), file = paste("EigenFit_", x, ".txt", sep=""), append = TRUE)
#capture.output(A, file = paste("EigenFit_", x, ".txt", sep=""), append = TRUE)
#B=car::Anova(ME.fit)
#cat("\n\n", file = paste("EigenFit_", x, ".txt", sep=""), append = TRUE)
#cat(c(paste(x),"ANOVA\n"), file = paste("EigenFit_", x, ".txt", sep=""), append = TRUE)
#capture.output(B, file = paste("EigenFit_", x, ".txt", sep=""), append = TRUE)
cat("\n\n", file = "PsTreat.txt", append = TRUE)
fwrite(A, file = "PsTreat.txt", append = TRUE,col.names=FALSE,row.names = FALSE,quote = FALSE,sep="\t")
#cat("\n\n", file = "PsPop.txt", append = TRUE)
#cat(paste(x, A$coefficients[3,4], sep="\t"), file = "PsPop.txt", append = TRUE)
#C<-anova(ME.fit,ME.fit2)
}
# start cluster
parallelCluster <- parallel::makeCluster(detectCores()-1, type = "FORK")
print(parallelCluster)
parLapply(parallelCluster, list, getGLMs)
# Shutdown cluster neatly
if(!is.null(parallelCluster)) {
parallel::stopCluster(parallelCluster)
parallelCluster <- c()
}
gc()
ForFDR.treat<-read.delim("PsTreat.txt", sep = "\t", header=FALSE)
View(ForFDR.treat)
ForFDR.treat$FDR<-p.adjust(ForFDR.treat$V2, method = "holm")
filter(ForFDR.treat, FDR <=0.05)
SigModTreat<-c("brown")
x<-dplyr::filter(MergedDataset, moduleColor== "brown")
MergedDataset<- read.csv("MergedDataSet.csv", header=TRUE)
MergedDataset<- read.csv("MergedDataSet.csv", header=TRUE)
x<-dplyr::filter(MergedDataset, moduleColor== "brown")
View(x)
write.csv(x, "brown.csv")
nrow(x)
Ats<-x$geneSymbol
Ats<-x$LocusLinkID
fwrite(Ats,file="brown.ats.txt",sep="\t",quote=FALSE,row.names = FALSE)
Ats<-data.frame(x$LocusLinkID)
fwrite(Ats,file="brown.ats.txt",sep="\t",quote=FALSE,row.names = FALSE)
View(MergedDataset)
# 2016 SpAlt_epiGBS XMRF network analysis
# Aug 23, 2017
setwd('/Volumes/Analysis1/2015BPoil/Deepwater-Horizon-Oil-Spill-analyses/Final_ClusterPVCA/')
library(XMRF)
library(data.table)
library(dplyr)
InputData<-fread("/Volumes/Analysis1/2015BPoil/Deepwater-Horizon-Oil-Spill-analyses/Final_ClusterPVCA/mergeddataset.csv",data.table = FALSE)
Filtered<-filter(InputData, moduleColor=="brown")
# 2016 SpAlt_epiGBS XMRF network analysis
# Aug 23, 2017
setwd('/Volumes/Analysis1/2015BPoil/Deepwater-Horizon-Oil-Spill-analyses/Final_ClusterPVCA/')
library(XMRF)
library(data.table)
library(dplyr)
InputData<-fread("/Volumes/Analysis1/2015BPoil/Deepwater-Horizon-Oil-Spill-analyses/Final_ClusterPVCA/mergeddataset.csv",data.table = FALSE)
Filtered<-filter(InputData, moduleColor=="brown")
View(Filtered)
Prepped<-Filtered[,1:19]
View(Prepped)
In.mat<-data.matrix(Prepped[,-1])
row.names(In.mat)<-Prepped[,1]
hist(In.mat, breaks=20)
Pheno<-fread("BPoiltraits.csv",data.table = FALSE)
help(XMRF)
"XMRF"
fit <- XMRF(In.filtered, method="GGM", N=100, stability="STAR", nCpus = 4)
fit <- XMRF(In.mat, method="GGM", N=100, stability="STAR", nCpus = 4)
MergedDataset<- read.csv("MergedDataSet.csv", header=TRUE)
x<-dplyr::filter(MergedDataset, moduleColor== "brown")
MergedDataset<- read.csv("MergedDataSet.csv", header=TRUE)
x<-dplyr::filter(MergedDataset, moduleColor== "brown")
nrow(x)
Ats<-data.frame(x$LocusLinkID)
VPlant<-fread("/Users/marianoalvarez/Dropbox (Personal)/Alvarez/Microarray_MS/Final microarray ms/BPOilMolEcol/SuppFile3.csv",data.table = FALSE)
View(VPlant)
filter(VPlant, Gene %in% x$LocusLinkID)
View(x)
colnames(VPlant)[1]<-"LocusLinkID"
x2<-merge(VPlant,x,all.x=TRUE,by="LocusLinkID")
View(x2)
sort(x2, Connections)
help(sort)
help(order)
help(reorder)
x2<-x2[order(Connections),]
attach(x2)
x2<-x2[order(Connections),]
detach(x2)
View(x2)
attach(x2)
x2<-x2[order(-Connections),]
detach(x2)
View(x2)
View(x2)
rownames(x2)<-1:nrow(x2)
Sequences<-fread("/Users/marianoalvarez/Library/Mobile Documents/com~apple~CloudDocs/Research/Projects/2012BPOilMicroarray/sequence_array.csv")
View(Sequences)
View(x2)
colnames(x)[20]<-"TargetID"
x.seq<-merge(x,Sequences,by="TargetID",all.x=TRUE)
View(x.seq)
x.seq<-x.seq[,c(1,24)]
fwrite(x.seq,file="sequences.txt",sep="\t",col.names = FALSE,row.names = FALSE,quote = FALSE)
install.packages("sequinr")
install.packages("seqinr")
library(seqinr)
translate(x.seq$Sequence)
i<-1
translate(x.seq[i,2])
class(x.seq$Sequence)
x.seq[i,2]
translate(tolower(x.seq[i,2]))
s2c(x.seq[i,2])
translate(s2c(x.seq[i,2]))
c2s(translate(s2c(x.seq[i,2])))
for (i in 1:nrow(x.seq)){
x.seq[i,2]<-c2s(translate(s2c(x.seq[i,2])))
}
fwrite(x.seq,file="protein_sequences.txt",sep="\t",col.names = FALSE,row.names = FALSE,quote = FALSE)
# 2016 SpAlt_epiGBS XMRF network analysis
# Aug 23, 2017
setwd('/Volumes/Analysis1/2015BPoil/Deepwater-Horizon-Oil-Spill-analyses/Final_ClusterPVCA/')
library(XMRF)
library(data.table)
library(dplyr)
InputData<-fread("/Volumes/Analysis1/2015BPoil/Deepwater-Horizon-Oil-Spill-analyses/Final_ClusterPVCA/mergeddataset.csv",data.table = FALSE)
Filtered<-filter(InputData, moduleColor=="brown")
Prepped<-Filtered[,1:19]
In.mat<-data.matrix(Prepped[,-1])
row.names(In.mat)<-Prepped[,1]
MostVariable<-function(input,filt){
var <- apply(input, 1, var)
nac <- apply(input, 1, function(x) sum(is.na(x)))
hist(var)
kirc.tum.gd <- input[var >= quantile(var, probs=(1-filt), na.rm=T) & !is.na(var) & nac==0, ]
return(kirc.tum.gd)
}
#In.filtered<-MostVariable(In.mat,filt=opt$pct)
# Take a look at the data to confirm distribution family
hist(In.mat, breaks=20)
# Pheno
Pheno<-fread("BPoiltraits.csv",data.table = FALSE)
oil<-In.mat[,c(1:8,17)]
noOil<-In.mat[,c(9:16,18)]
fit <- XMRF(oil, method="GGM", N=100, stability="STAR", nlams=10, beta=0.001, nCpus = 7)
XMRF
help(XMRF)
